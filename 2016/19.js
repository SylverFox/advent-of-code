export default function (input) {
    let output = [...Array(input[0]/1).keys()]
    while (output.length > 1) {
        if (output.length % 2 === 0) {
            output = output.filter((_,i) => i % 2 === 0)
        } else {
            output = output.slice(1).filter((_,i) => i % 2 === 1)
        }
    }
    console.log('part 1:', output[0] + 1)

    output = [...Array(input[0]/1).keys()]
    for (let i = 0; output.length > 1; i = i >= output.length ? 0 : i + 1) {
        output.splice(Math.floor((i + output.length / 2) % output.length), 1)
        console.log(i, Math.floor((i + output.length / 2) % output.length), output.join(','))
    }
    console.log('part 2:', output[0] + 1)

    // 1 = 1
    // 1, 2 = 1
    // 1, 2, 3 = 1
    // 1, 2, 3, 4 = 1
    // 1, 2, 3, 4, 5 = 2
    // 1, 2, 3, 4, 5, 6 = 3

    // 1, 2, 3, 4, 5, 6, 7 = 5

    // 1, 2, 3, 4, 5, 6, 7, 8 = 7
    // 1, 2, 3, 4, 5, 6, 7, 8, 9 = 9
    // 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 = 1
    // 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 = 1
    // 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 = 1

    // 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
    // 1, 2, 3, 4, 5, 6,    8, 9, 10, 11, 12, 13
    // 1, 2, 3, 4, 5, 6,    8,    10, 11, 12, 13
    // 1, 2, 3, 4, 5, 6,    8,        11, 12, 13
    // 1, 2, 3, 4, 5, 6,    8,        11,     13
    // 1, 2, 3, 4, 5, 6,    8,        11,       
    // 1,    3, 4, 5, 6,    8,        11,       
    // 1,       4, 5, 6,    8,        11,       
    // 1,       4,    6,    8,        11,       
    // 1,       4,          8,        11,       
    // 1,       4,          8,                  
    //          4,          8,                  
    //          4,                              

    // 1,2,3,4,5,6,7,8
    // 1,2,3,4,  6,7,8
    // 1,2,3,4,    7,8
    // 1,2,3,4,    7  
    //   2,3,4,    7  
    //   2,  4,    7  
    //   2,        7  
    //             7  

    // 1,2,3,4,5
    // 1,2,  4,5
    // 1,2,  4  
    //   2,  4  
    //   2      

    // 1,2,3,4,5,6,7,8,9
    // 1,2,3,4,  6,7,8,9
    // 1,2,3,4,  6,  8,9
    // 1,2,3,4,  6,    9
    //   2,3,4,  6,    9
    //     3,4,  6,    9
    //     3,    6,    9
    //     3,          9
    //                 9

    // 1,2,  4,  6,    9
    //   2,  4,  6,    9
    //   2,      6,    9
    //   2,            9
    //                 9

}
